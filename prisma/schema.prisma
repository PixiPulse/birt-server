// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String       @id @default(uuid())
  name      String       @db.VarChar(100)
  username  String       @unique @db.VarChar(100)
  password  String       @db.VarChar(255)
  roles     AdminRoles[] @default([admin])
  createAt  DateTime     @default(now()) @map("created_at")
  updatedAt DateTime     @updatedAt @map("updated_at")
  Language  Language[]
  Place     Place[]
  Audio     Audio[]
  User      User[]

  @@map("admin")
}

enum AdminRoles {
  superadmin
  admin
}

model Language {
  id        String   @id @default(uuid())
  name      String   @unique @db.VarChar(100)
  imgPath   String   @map("img_path") @db.VarChar(255)
  imgUrl    String   @map("img_url") @db.VarChar(255)
  adminId   String?  @map("admin_id")
  createAt  DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  admin Admin? @relation(fields: [adminId], references: [id], onDelete: SetNull)

  @@map("language")
}

model Place {
  id        String   @id @default(uuid())
  name      String   @unique @db.VarChar(100)
  imgPath   String   @map("img_path") @db.VarChar(255)
  imgUrl    String   @map("img_url") @db.VarChar(255)
  adminId   String?  @map("admin_id")
  createAt  DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  admin Admin? @relation(fields: [adminId], references: [id], onDelete: SetNull)
  User  User[]

  @@map("place")
}

model Audio {
  id         String   @unique @default(uuid())
  filePath   String   @map("file_path") @db.VarChar(255)
  fileUrl    String   @map("file_url") @db.VarChar(255)
  imgPath    String[] @map("img_path") @db.VarChar(255)
  imgUrl     String[] @map("img_url") @db.VarChar(255)
  placeId    String   @map("place_id")
  languageId String   @map("language_id")
  adminId    String?  @map("admin_id")
  createAt   DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  admin Admin? @relation(fields: [adminId], references: [id], onDelete: SetNull)

  @@id([placeId, languageId])
  @@map("audio")
}

model User {
  id       String  @id @default(uuid())
  name     String  @db.VarChar(100)
  username String  @unique @db.VarChar(100)
  password String  @db.VarChar(255)
  placeId  String? @map("place_id")
  adminId  String? @map("admin_id")

  createAt  DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  admin Admin? @relation(fields: [adminId], references: [id], onDelete: SetNull)
  place Place? @relation(fields: [placeId], references: [id], onDelete: SetNull)

  @@map("user")
}
